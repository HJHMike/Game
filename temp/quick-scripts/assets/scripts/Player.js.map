{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n         // Player.js\n         //...\n         properties: {\n             // 主角跳跃高度\n             jumpHeight: 0,\n             // 主角跳跃持续时间\n             jumpDuration: 0,\n             // 最大移动速度\n             maxMoveSpeed: 0,\n             // 加速度\n             accel: 0,\n             // 跳跃音效资源\n             jumpAudio: {\n                 default: null,\n                 url: cc.AudioClip\n             },\n         },\n         //...\n         setJumpAction: function () {\n             // 跳跃上升\n             var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n             // 下落\n             var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n             // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n             var callback = cc.callFunc(this.playJumpSound, this);\n             // 不断重复\n             return cc.repeatForever(cc.sequence(jumpUp, jumpDown,callback));\n         },\n         \n         playJumpSound: function () {\n             //调用声音引擎播放声音\n             cc.audioEngine.playEffect(this.jumpAudio , false);\n         \n         },\n         \n         //..\n         setInputControl: function () {\n             var self = this;\n             // 添加键盘事件监听\n             cc.eventManager.addListener({\n                 event: cc.EventListener.KEYBOARD,\n                 // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\n                 onKeyPressed: function(keyCode, event) {\n                     switch(keyCode) {\n                         case cc.KEY.a:\n                             self.accLeft = true;\n                             self.accRight = false;\n                             break;\n                         case cc.KEY.d:\n                             self.accLeft = false;\n                             self.accRight = true;\n                             break;\n                     }\n                 },\n                 // 松开按键时，停止向该方向的加速\n                 onKeyReleased: function(keyCode, event) {\n                     switch(keyCode) {\n                         case cc.KEY.a:\n                             self.accLeft = false;\n                                 break;\n                         case cc.KEY.d:\n                             self.accRight = false;\n                                 break;\n                     }\n                 }\n             }, self.node);\n         },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n     // Player.js\n     onLoad: function () {\n         // 初始化跳跃动作\n         this.jumpAction = this.setJumpAction();\n         this.node.runAction(this.jumpAction);\n     \n         // 加速度方向开关\n         this.accLeft = false;\n         this.accRight = false;\n         // 主角当前水平方向速度\n         this.xSpeed = 0;\n         \n         // 初始化键盘输入监听\n         this.setInputControl();\n     },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n     // Player.js\n     update: function (dt) {\n         // 根据当前加速度方向每帧更新速度\n         if (this.accLeft) {\n             this.xSpeed -= this.accel * dt;\n         } else if (this.accRight) {\n             this.xSpeed += this.accel * dt;\n         }\n         // 限制主角的速度不能超过最大值\n         if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n         // if speed reach limit, use max speed with current direction\n             this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n         }\n         \n         // 根据当前速度更新主角的位置\n         this.node.x += this.xSpeed * dt;\n     },\n});\n"]}