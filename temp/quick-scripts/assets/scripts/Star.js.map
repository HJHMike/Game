{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACP;AACAC,oBAAY;AAFL,KAHP;;AAQL;;AAEA;AACCC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOX,GAAGY,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCP,SAAjC,CAAX;AACA,eAAOI,IAAP;AACC,KAjBD;;AAmBJI,cAAU,oBAAW;AACjB;AACA,aAAKP,IAAL,CAAUQ,YAAV;AACA;AACA,aAAKR,IAAL,CAAUS,SAAV;AACA;AACA,aAAKJ,IAAL,CAAUK,OAAV;AACC,KA1BD;;AA4BLC,SA5BK,mBA4BI,CAER,CA9BI;;;AAgCJC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKf,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC5C;AACA,iBAAKU,QAAL;AACA;AACH;AACD;AACA,YAAIO,eAAe,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAgB,KAAKf,IAAL,CAAUgB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKZ,IAAL,CAAUa,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACC;AA3CD,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n         // 星星和主角之间的距离小于这个数值时，就会完成收集\n         pickRadius: 0\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n     getPlayerDistance: function () {\n         // 根据 player 节点位置判断距离\n         var playerPos = this.game.player.getPosition();\n         // 根据两点位置计算两点之间距离\n         var dist = cc.pDistance(this.node.position, playerPos);\n         return dist;\n         },\n         \n     onPicked: function() {\n         // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n         this.game.spawnNewStar();\n         // 调用 Game 脚本的得分方法\n         this.game.gainScore();\n         // 然后销毁当前星星节点\n         this.node.destroy();\n         },\n\n    start () {\n\n    },\n\n     update: function (dt) {\n         // 每帧判断和主角之间的距离是否小于收集距离\n         if (this.getPlayerDistance() < this.pickRadius) {\n             // 调用收集行为\n             this.onPicked();\n             return;\n         }\n         // 根据 Game 脚本中的计时器更新星星的透明度\n         var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n         var minOpacity = 50;\n         this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n         },\n});\n"]}